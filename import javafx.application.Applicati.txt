package com.example.demo2;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;

public class HelloApplication extends Application {

    private TextArea textArea;
    private TextField textField;
    private ToggleGroup colorGroup;
    private CheckBox boldCheckBox;
    private CheckBox italicCheckBox;
    private ComboBox<String> styleComboBox;

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Text Editor");

        // Create components
        textField = new TextField();
        textField.setPrefWidth(250); // Decrease width
        textArea = new TextArea();
        textArea.setEditable(false);
        textArea.setPrefWidth(250); // Decrease width
        colorGroup = new ToggleGroup();

        RadioButton redButton = new RadioButton("Red");
        redButton.setToggleGroup(colorGroup);
        RadioButton blueButton = new RadioButton("Blue");
        blueButton.setToggleGroup(colorGroup);
        RadioButton greenButton = new RadioButton("Green");
        greenButton.setToggleGroup(colorGroup);

        boldCheckBox = new CheckBox("Bold");
        italicCheckBox = new CheckBox("Italic");

        styleComboBox = new ComboBox<>();
        styleComboBox.getItems().addAll("Bold", "Italic", "Bold & Italic", "Regular");

        Button processButton = new Button("Process");
        processButton.setOnAction(event -> processText());

        Button clearButton = new Button("Clear");
        clearButton.setOnAction(event -> clearFields());

        // Layout
        GridPane gridPane = new GridPane();
        gridPane.setPadding(new Insets(20));
        gridPane.setVgap(15);
        gridPane.setHgap(15);

        gridPane.add(new Label("Enter New Text:"), 0, 0);
        gridPane.add(textField, 1, 0, 2, 1);

        gridPane.add(new Label("Select Color:"), 0, 1);
        gridPane.add(redButton, 0, 2);
        gridPane.add(blueButton, 0, 3);
        gridPane.add(greenButton, 0, 4);

        gridPane.add(new Label("Text Area:"), 1, 1);
        gridPane.add(textArea, 1, 2, 1, 3);

        // Move the style selection to the right of the text area
        VBox styleBox = new VBox(10);
        styleBox.getChildren().addAll(new Label("Select Style:"), boldCheckBox, italicCheckBox, styleComboBox);
        gridPane.add(styleBox, 2, 2, 1, 3); // Add the style box to the right of the text area

        // Center the buttons
        VBox buttonBox = new VBox(10, processButton, clearButton);
        buttonBox.setPadding(new Insets(10));
        buttonBox.setStyle("-fx-alignment: center;");
        gridPane.add(buttonBox, 0, 5, 3, 1);

        // Add borders around components
        addBorders(gridPane);

        // BorderPane
        BorderPane borderPane = new BorderPane();
        borderPane.setCenter(gridPane);
        borderPane.setStyle("-fx-background-color: #f0f0f0;");

        // Add title to the top
        Label titleLabel = new Label("Simple Text Editor");
        titleLabel.setStyle("-fx-font-size: 24; -fx-font-weight: bold; -fx-padding: 10;");
        borderPane.setTop(titleLabel);

        // Scene
        Scene scene = new Scene(borderPane, 600, 400);
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private void addBorders(GridPane gridPane) {
        // Add borders to the gridPane
        gridPane.setStyle("-fx-border-color: black; -fx-border-width: 1; -fx-padding: 10;");

        // Add borders to the Text Field and Text Area
        textField.setStyle("-fx-border-color: gray; -fx-border-width: 1;");
        textArea.setStyle("-fx-border-color: gray; -fx-border-width: 1;");
    }

    private void processText() {
        String inputText = textField.getText();
        textArea.clear();

        // Get selected color
        String color = "black";
        RadioButton selectedColor = (RadioButton) colorGroup.getSelectedToggle();
        if (selectedColor != null) {
            color = selectedColor.getText().toLowerCase();
        }

        // Style text
        String style = "-fx-font-weight: normal; -fx-font-style: normal;";
        if (boldCheckBox.isSelected() || styleComboBox.getValue() != null && styleComboBox.getValue().contains("Bold")) {
            style = "-fx-font-weight: bold;";
        }
        if (italicCheckBox.isSelected() || styleComboBox.getValue() != null && styleComboBox.getValue().contains("Italic")) {
            style += "-fx-font-style: italic;";
        }

        textArea.setStyle("-fx-text-fill: " + color + ";" + style);
        textArea.setText(inputText);
    }

    private void clearFields() {
        textField.clear();
        textArea.clear();
        colorGroup.selectToggle(null);
        boldCheckBox.setSelected(false);
        italicCheckBox.setSelected(false);
        styleComboBox.setValue(null);
    }

    public static void main(String[] args) {
        launch(args);
    }
}
